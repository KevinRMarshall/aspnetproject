// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineGameStore.Models;

namespace OnlineGameStore.Migrations
{
    [DbContext(typeof(GameStoreContext))]
    partial class GameStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OnlineGameStore.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("accountId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AspuserId")
                        .IsRequired()
                        .HasColumnName("ASPuserId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("AccountId");

                    b.ToTable("account");
                });

            modelBuilder.Entity("OnlineGameStore.Models.BillingCountry", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("countryId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("TaxModifier")
                        .HasColumnName("taxModifier")
                        .HasColumnType("numeric(18, 0)");

                    b.HasKey("CountryId");

                    b.ToTable("billingCountry");
                });

            modelBuilder.Entity("OnlineGameStore.Models.BillingProvinceState", b =>
                {
                    b.Property<int>("ProvinceStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("provinceStateId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnName("countryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<decimal>("TaxModifier")
                        .HasColumnName("taxModifier")
                        .HasColumnType("numeric(18, 0)");

                    b.HasKey("ProvinceStateId")
                        .HasName("PK_billingProvince");

                    b.HasIndex("CountryId");

                    b.ToTable("billingProvinceState");
                });

            modelBuilder.Entity("OnlineGameStore.Models.CardType", b =>
                {
                    b.Property<int>("CardTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cardTypeId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardType1")
                        .IsRequired()
                        .HasColumnName("cardType")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("CardTypeId");

                    b.ToTable("cardType");
                });

            modelBuilder.Entity("OnlineGameStore.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cartId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnName("accountId")
                        .HasColumnType("int");

                    b.HasKey("CartId");

                    b.HasIndex("AccountId");

                    b.ToTable("cart");
                });

            modelBuilder.Entity("OnlineGameStore.Models.CartGame", b =>
                {
                    b.Property<int>("CartGameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cartGameId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CartId")
                        .HasColumnName("cartId")
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnName("gameId")
                        .HasColumnType("int");

                    b.HasKey("CartGameId");

                    b.HasIndex("CartId");

                    b.HasIndex("GameId");

                    b.ToTable("cartGame");
                });

            modelBuilder.Entity("OnlineGameStore.Models.CreditCard", b =>
                {
                    b.Property<int>("CreditId")
                        .HasColumnName("creditId")
                        .HasColumnType("int");

                    b.Property<int>("AccountId")
                        .HasColumnName("accountId")
                        .HasColumnType("int");

                    b.Property<string>("BillingAddress")
                        .IsRequired()
                        .HasColumnName("billingAddress")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("BillingPhone")
                        .IsRequired()
                        .HasColumnName("billingPhone")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("CardCode")
                        .HasColumnName("cardCode")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("CardHolder")
                        .IsRequired()
                        .HasColumnName("cardHolder")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("CardNumber")
                        .HasColumnName("cardNumber")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<int>("CardTypeId")
                        .HasColumnName("cardTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnName("countryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnName("expireDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ProvinceStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("provinceStateId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("CreditId");

                    b.HasIndex("AccountId");

                    b.HasIndex("CardTypeId");

                    b.HasIndex("CountryId");

                    b.HasIndex("ProvinceStateId");

                    b.ToTable("creditCard");
                });

            modelBuilder.Entity("OnlineGameStore.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("eventId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EventDescription")
                        .IsRequired()
                        .HasColumnName("eventDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EventTitle")
                        .IsRequired()
                        .HasColumnName("eventTitle")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("GameId")
                        .HasColumnName("gameId")
                        .HasColumnType("int");

                    b.HasKey("EventId");

                    b.HasIndex("GameId");

                    b.ToTable("event");
                });

            modelBuilder.Entity("OnlineGameStore.Models.EventAttendee", b =>
                {
                    b.Property<int>("EventAttendeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("eventAttendeeId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnName("accountId")
                        .HasColumnType("int");

                    b.Property<int>("EventId")
                        .HasColumnName("eventId")
                        .HasColumnType("int");

                    b.HasKey("EventAttendeeId");

                    b.HasIndex("AccountId");

                    b.HasIndex("EventId");

                    b.ToTable("eventAttendee");
                });

            modelBuilder.Entity("OnlineGameStore.Models.Friend", b =>
                {
                    b.Property<int>("FriendId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("friendId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FriendProfileId")
                        .HasColumnName("friendProfileId")
                        .HasColumnType("int");

                    b.HasKey("FriendId");

                    b.ToTable("friend");
                });

            modelBuilder.Entity("OnlineGameStore.Models.FriendList", b =>
                {
                    b.Property<int>("FriendListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("friendListId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnName("accountId")
                        .HasColumnType("int");

                    b.Property<int>("FriendId")
                        .HasColumnName("friendId")
                        .HasColumnType("int");

                    b.HasKey("FriendListId");

                    b.HasIndex("AccountId");

                    b.HasIndex("FriendId");

                    b.ToTable("friendList");
                });

            modelBuilder.Entity("OnlineGameStore.Models.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("gameId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GameDescription")
                        .IsRequired()
                        .HasColumnName("gameDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("GameDiscount")
                        .IsRequired()
                        .HasColumnName("gameDiscount")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("GameDownloadLink")
                        .IsRequired()
                        .HasColumnName("gameDownloadLink")
                        .HasColumnType("xml");

                    b.Property<int>("GameGenreId")
                        .HasColumnName("gameGenreId")
                        .HasColumnType("int");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasColumnName("gameName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("GamePrice")
                        .HasColumnName("gamePrice")
                        .HasColumnType("money");

                    b.HasKey("GameId");

                    b.HasIndex("GameGenreId");

                    b.ToTable("game");
                });

            modelBuilder.Entity("OnlineGameStore.Models.GameGenre", b =>
                {
                    b.Property<int>("GameGenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("gameGenreId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("GameGenreId");

                    b.ToTable("gameGenre");
                });

            modelBuilder.Entity("OnlineGameStore.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("orderId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnName("accountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnName("date")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Discount")
                        .HasColumnName("discount")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<bool>("IsProcessed")
                        .HasColumnName("isProcessed")
                        .HasColumnType("bit");

                    b.Property<decimal>("SubTotal")
                        .HasColumnName("subTotal")
                        .HasColumnType("money");

                    b.HasKey("OrderId");

                    b.HasIndex("AccountId");

                    b.ToTable("order");
                });

            modelBuilder.Entity("OnlineGameStore.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("orderItemId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GameId")
                        .HasColumnName("gameId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnName("orderId")
                        .HasColumnType("int");

                    b.HasKey("OrderItemId");

                    b.HasIndex("GameId");

                    b.HasIndex("OrderId");

                    b.ToTable("orderItem");
                });

            modelBuilder.Entity("OnlineGameStore.Models.Profile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("profileId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnName("accountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnName("birthdate")
                        .HasColumnType("datetime");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnName("country")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("FavouriteGameCategory")
                        .HasColumnName("favouriteGameCategory")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FavouritePlatform")
                        .HasColumnName("favouritePlatform")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("Gender")
                        .HasColumnName("gender")
                        .HasColumnType("bit");

                    b.Property<bool?>("PaidOrFree")
                        .HasColumnName("paidOrFree")
                        .HasColumnType("bit");

                    b.Property<string>("ParentalCode")
                        .HasColumnName("parentalCode")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("phoneNumber")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("ProfileDescription")
                        .IsRequired()
                        .HasColumnName("profileDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProfileName")
                        .IsRequired()
                        .HasColumnName("profileName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("ProfileId");

                    b.HasIndex("AccountId");

                    b.ToTable("profile");
                });

            modelBuilder.Entity("OnlineGameStore.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("reviewId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GameId")
                        .HasColumnName("gameId")
                        .HasColumnType("int");

                    b.Property<bool>("IsRecommended")
                        .HasColumnName("isRecommended")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnName("profileId")
                        .HasColumnType("int");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasColumnName("reviewText")
                        .HasColumnType("text");

                    b.Property<string>("ReviewTitle")
                        .IsRequired()
                        .HasColumnName("reviewTitle")
                        .HasColumnType("text");

                    b.HasKey("ReviewId");

                    b.HasIndex("GameId");

                    b.ToTable("review");
                });

            modelBuilder.Entity("OnlineGameStore.Models.WishList", b =>
                {
                    b.Property<int>("WishListId")
                        .HasColumnName("wishListId")
                        .HasColumnType("int");

                    b.Property<int>("AccountId")
                        .HasColumnName("accountId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPublic")
                        .HasColumnName("isPublic")
                        .HasColumnType("bit");

                    b.HasKey("WishListId");

                    b.HasIndex("AccountId");

                    b.ToTable("wishList");
                });

            modelBuilder.Entity("OnlineGameStore.Models.WishListItem", b =>
                {
                    b.Property<int>("WishListItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("wishListItemId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GameId")
                        .HasColumnName("gameId")
                        .HasColumnType("int");

                    b.Property<int>("WishListId")
                        .HasColumnName("wishListId")
                        .HasColumnType("int");

                    b.HasKey("WishListItemId");

                    b.HasIndex("GameId");

                    b.HasIndex("WishListId");

                    b.ToTable("wishListItem");
                });

            modelBuilder.Entity("OnlineGameStore.Models.BillingProvinceState", b =>
                {
                    b.HasOne("OnlineGameStore.Models.BillingCountry", "Country")
                        .WithMany("BillingProvinceState")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_billingProvinceState_billingCountry")
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineGameStore.Models.Cart", b =>
                {
                    b.HasOne("OnlineGameStore.Models.Account", "Account")
                        .WithMany("Cart")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_cart_account")
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineGameStore.Models.CartGame", b =>
                {
                    b.HasOne("OnlineGameStore.Models.Cart", "Cart")
                        .WithMany("CartGame")
                        .HasForeignKey("CartId")
                        .HasConstraintName("FK_cartGame_cart")
                        .IsRequired();

                    b.HasOne("OnlineGameStore.Models.Game", "Game")
                        .WithMany("CartGame")
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK_cartGame_game")
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineGameStore.Models.CreditCard", b =>
                {
                    b.HasOne("OnlineGameStore.Models.Account", "Account")
                        .WithMany("CreditCard")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_creditCard_account")
                        .IsRequired();

                    b.HasOne("OnlineGameStore.Models.CardType", "CardType")
                        .WithMany("CreditCard")
                        .HasForeignKey("CardTypeId")
                        .HasConstraintName("FK_creditCard_cardType")
                        .IsRequired();

                    b.HasOne("OnlineGameStore.Models.BillingCountry", "Country")
                        .WithMany("CreditCard")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_creditCard_billingCountry")
                        .IsRequired();

                    b.HasOne("OnlineGameStore.Models.BillingProvinceState", "ProvinceState")
                        .WithMany("CreditCard")
                        .HasForeignKey("ProvinceStateId")
                        .HasConstraintName("FK_creditCard_billingProvinceState")
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineGameStore.Models.Event", b =>
                {
                    b.HasOne("OnlineGameStore.Models.Game", "Game")
                        .WithMany("Event")
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK_event_game")
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineGameStore.Models.EventAttendee", b =>
                {
                    b.HasOne("OnlineGameStore.Models.Account", "Account")
                        .WithMany("EventAttendee")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_eventAttendee_account")
                        .IsRequired();

                    b.HasOne("OnlineGameStore.Models.Event", "Event")
                        .WithMany("EventAttendee")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_eventAttendee_event")
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineGameStore.Models.FriendList", b =>
                {
                    b.HasOne("OnlineGameStore.Models.Account", "Account")
                        .WithMany("FriendList")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_friendList_account")
                        .IsRequired();

                    b.HasOne("OnlineGameStore.Models.Friend", "Friend")
                        .WithMany("FriendList")
                        .HasForeignKey("FriendId")
                        .HasConstraintName("FK_friendList_friend")
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineGameStore.Models.Game", b =>
                {
                    b.HasOne("OnlineGameStore.Models.GameGenre", "GameGenre")
                        .WithMany("Game")
                        .HasForeignKey("GameGenreId")
                        .HasConstraintName("FK_game_gameGenre")
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineGameStore.Models.Order", b =>
                {
                    b.HasOne("OnlineGameStore.Models.Account", "Account")
                        .WithMany("Order")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_order_account")
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineGameStore.Models.OrderItem", b =>
                {
                    b.HasOne("OnlineGameStore.Models.Game", "Game")
                        .WithMany("OrderItem")
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK_orderItem_game")
                        .IsRequired();

                    b.HasOne("OnlineGameStore.Models.Order", "Order")
                        .WithMany("OrderItem")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_orderItem_order")
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineGameStore.Models.Profile", b =>
                {
                    b.HasOne("OnlineGameStore.Models.Account", "Account")
                        .WithMany("Profile")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_profile_account")
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineGameStore.Models.Review", b =>
                {
                    b.HasOne("OnlineGameStore.Models.Game", "Game")
                        .WithMany("Review")
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK_review_game")
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineGameStore.Models.WishList", b =>
                {
                    b.HasOne("OnlineGameStore.Models.Account", "Account")
                        .WithMany("WishList")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_wishList_account")
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineGameStore.Models.WishListItem", b =>
                {
                    b.HasOne("OnlineGameStore.Models.Game", "Game")
                        .WithMany("WishListItem")
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK_wishListItem_game")
                        .IsRequired();

                    b.HasOne("OnlineGameStore.Models.WishList", "WishList")
                        .WithMany("WishListItem")
                        .HasForeignKey("WishListId")
                        .HasConstraintName("FK_wishListItem_wishList")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
